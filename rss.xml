<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Blog by Anunaya Srivastava]]></title><description><![CDATA[Blog by Anunaya Srivastava]]></description><link>https://lumen.netlify.com</link><generator>GatsbyJS</generator><lastBuildDate>Sun, 28 Feb 2021 15:49:12 GMT</lastBuildDate><item><title><![CDATA[Vim Emergency]]></title><description><![CDATA[I have no use Vim. But I have no idea how to even start typing. Help me!]]></description><link>https://lumen.netlify.com/posts/vim-emergency</link><guid isPermaLink="false">https://lumen.netlify.com/posts/vim-emergency</guid><pubDate>Sat, 27 Feb 2021 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;Our friend Susan is debugging a &lt;em&gt;production&lt;/em&gt; issue. She figured out that a
configuration file on the production needs to be updated. Her manager asked
said, “Susan, this is a piece of cake! You can find the file in &lt;code class=&quot;language-text&quot;&gt;/etc/&lt;/code&gt;“.&lt;/p&gt;
&lt;p&gt;Susan ssh’d into the server. She knew that a file can be read in vim, and she
opens the file in vim. &lt;em&gt;OMG! She is trying to edit the text but nothing is
happening! What is going on&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Susan has no time for long tutorials. She needs something crip and to the point.
If you are Susan read on …&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Our friend Susan needs to fix a production issue by updating a configuration
file on the production server.&lt;/p&gt;
&lt;p&gt;She ssh’d into the server.&lt;br&gt;
She needs to edit the file and VIM is the only editor available.&lt;br&gt;
She has no clue how to edit text in vim.  &lt;/p&gt;
&lt;p&gt;If you are Susan, read on …&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;First of all, vim is a terminal application which means the mouse won’t work.
&lt;em&gt;You need to use the keyboard to move around.&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Vim has a writing mode and a ‘not writing mode’(called ‘normal mode’).
Vim starts in normal mode, hence typing letters will not work.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Use arrow keys&lt;/em&gt; to move left, right, up and down in the file.(Simple
navigation keys are mentioned in the &lt;a href=&quot;#moving-in-the-file&quot;&gt;next section&lt;/a&gt;.)&lt;/li&gt;
&lt;li&gt;To start &lt;em&gt;inserting&lt;/em&gt; text type &lt;code class=&quot;language-text&quot;&gt;i&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;When you are done, press &lt;code class=&quot;language-text&quot;&gt;&amp;lt;ESC&amp;gt;&lt;/code&gt; to stop inserting text and go back to normal
mode.&lt;/li&gt;
&lt;li&gt;To save the file, hit &lt;code class=&quot;language-text&quot;&gt;&amp;lt;ESC&amp;gt;&lt;/code&gt; then type &lt;code class=&quot;language-text&quot;&gt;:write&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;To quit the file, hit &lt;code class=&quot;language-text&quot;&gt;&amp;lt;ESC&amp;gt;&lt;/code&gt; then type &lt;code class=&quot;language-text&quot;&gt;:quit&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;If you think you messed up and want to &lt;em&gt;exit without saving&lt;/em&gt; the file - &lt;code class=&quot;language-text&quot;&gt;:quit!&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;moving-in-the-file&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#moving-in-the-file&quot; aria-label=&quot;moving in the file permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Moving in the file&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;gg&lt;/code&gt;: Go to the first line.&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;G&lt;/code&gt;(Uppercase g): Go to the last line.&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;Ctrl+u&lt;/code&gt;: Page up&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;Ctrl_d&lt;/code&gt;: Page down&lt;/li&gt;
&lt;/ol&gt;</content:encoded></item><item><title><![CDATA[HTTP - The backbone of Internet]]></title><description><![CDATA[Layman explanation of what HTTP is.]]></description><link>https://lumen.netlify.com/posts/http-the-backbone-of-internet</link><guid isPermaLink="false">https://lumen.netlify.com/posts/http-the-backbone-of-internet</guid><pubDate>Sun, 03 Jan 2021 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;The internet(or World Wide Web) is now an inseparable part of our lives. We
can’t imagine our lives without the ease and information the internet provides
us. Services like Google Search, WhatsApp, Facebook, Internet Banking, Online
Reservations etc have transformed our lives. It goes without saying that there
is great business opportunity for companies and people making online
applications. &lt;/p&gt;
&lt;p&gt;Those who are in the business of building online applications/services, or
intend to join such as business should have an understanding of the units that
forms the internet as we know it today. Hence, I present you this article that
talks about a technology called HTTP that is one of the building blocks of
internet.&lt;/p&gt;
&lt;h2 id=&quot;what-the-hell-is-http&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#what-the-hell-is-http&quot; aria-label=&quot;what the hell is http permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;What the hell is HTTP?&lt;/h2&gt;
&lt;p&gt;If you are viewing photos on Instagram, or watching videos on Youtube or
reading this article Quepinch, the content in all these cases is stored in a
computer (that is far away, may be in another country). That content has to be
transferred from the remote computers to your mobile or laptop. There are
millions and billions of users consuming information on their computers. To
reliably serve so many consumers there is need of certain rules(also called
‘protocols’) to transfer the data from the storage computers to the consumers.
&lt;em&gt;HTTP&lt;/em&gt; is one of those rules. And it is a very important rule. Almost everything
&lt;a href=&quot;that&quot;&gt;that&lt;/a&gt; you see in our web browser or mobile uses HTTP!&lt;/p&gt;
&lt;p&gt;HTTP is an acronym that stands for &lt;em&gt;&lt;em&gt;H&lt;/em&gt;yper&lt;em&gt;T&lt;/em&gt;ext &lt;em&gt;T&lt;/em&gt;ransfer &lt;em&gt;P&lt;/em&gt;rotocol&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;HTTP is a set of rules that specifies how two computers can talk to each other
over the internet.&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&quot;who-made-http-and-where-is-it-written-&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#who-made-http-and-where-is-it-written-&quot; aria-label=&quot;who made http and where is it written  permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Who made HTTP and where is it written ?&lt;/h2&gt;
&lt;p&gt;The first version of HTTP is called &lt;em&gt;HTTP 0.9&lt;/em&gt; and was developed by &lt;a href=&quot;https://en.wikipedia.org/wiki/Tim_Berners-Lee&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener noreferrer&quot;&gt;Tim
Berners-Lee&lt;/a&gt; in 1989. &lt;/p&gt;
&lt;p&gt;&lt;img width=&quot;200&quot; src=&quot;https://s3.ap-south-1.amazonaws.com/prd-hc-oj-public-1/public/users/73794b05-fe63-4188-81cd-b6fd35c7aa4e/images/XAdOpEwgnPiHryCJ1hcUBYjTCfXcebP6&quot; style=&quot;display: block; margin-left:auto; margin-right:auto&quot;&gt;&lt;/p&gt;
&lt;p&gt;(Image Source: &lt;a href=&quot;https://en.wikipedia.org/wiki/Tim_Berners-Lee&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener noreferrer&quot;&gt;Wikipedia&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;Tim is an engineer and computer scientist. He is best known as the inventor of
World Wide Web.&lt;/p&gt;
&lt;p&gt;The HTTP protocol documentation is maintained by &lt;a href=&quot;https://en.wikipedia.org/wiki/Internet_Engineering_Task_Force&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener noreferrer&quot;&gt;IETF(Internet Engineering
Task Force)&lt;/a&gt;
which is an organisation that helps develop and promote internet standards such
as the HTTP protocol.&lt;/p&gt;
&lt;p&gt;The exact definition of the protocol is written in a text document known as
&lt;a href=&quot;https://en.wikipedia.org/wiki/Request_for_Comments&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener noreferrer&quot;&gt;Request for
Comments(RFC)&lt;/a&gt;, which is a
common way specifying specifications in the technical community. &lt;/p&gt;
&lt;p&gt;Any protocol, in fact anything, can’t be developed without imperfections in the
first shot. Hence, multiple versions needs to be developed, where each version
is better than the previous one. HTTP also has multiple versions. &lt;em&gt;The most
commonly used version is HTTP 1.1.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;The latest version for HTTP 1.1 is mention in &lt;a href=&quot;https://tools.ietf.org/html/rfc7230&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener noreferrer&quot;&gt;RFC 7230&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;if-i-want-to-learn-developing-online-apps-do-i-need-to-know-everything-http-documentation-says&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#if-i-want-to-learn-developing-online-apps-do-i-need-to-know-everything-http-documentation-says&quot; aria-label=&quot;if i want to learn developing online apps do i need to know everything http documentation says permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;If I want to learn developing online apps, do I need to know everything HTTP documentation says?&lt;/h2&gt;
&lt;p&gt;Fortunately no. &lt;/p&gt;
&lt;p&gt;The exact rules are implemented by the browser. Each browser is developed and
enhanced by their respective team of developers. The team should ensure that
their browser software is up to date with the HTTP protocols and the continuous
enhancements being made in it.&lt;/p&gt;
&lt;p&gt;As a software developer, one must know the basics of HTTP i.e. the principles
on which it is designed. This helps to understand how the browser will behave
in different situations. What different cases you can encounter while writing
your web application.&lt;/p&gt;
&lt;p&gt;Another post HTTP basics coming soon!&lt;/p&gt;
&lt;h2 id=&quot;but-i-have-also-heard-about-https-is-it-the-plural-of-http&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#but-i-have-also-heard-about-https-is-it-the-plural-of-http&quot; aria-label=&quot;but i have also heard about https is it the plural of http permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;But, I have also heard about HTTPS. Is it the plural of HTTP?&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;HTTPS&lt;/em&gt; is another protocol. &lt;em&gt;HTTPS&lt;/em&gt; stands for &lt;em&gt;HTTP Secure&lt;/em&gt; which, as the name
suggests, is HTTP with enhanced security. HTTPS ensures that the data that is
being transferred from one computer to another is *encrypted so that bad guys
can’t read your data.&lt;/p&gt;
&lt;p&gt;*&lt;strong&gt;Encryption&lt;/strong&gt; is the process of transforming data into some garbage values so
that people can’t make sense from it. The sender computer encrypts and sends
the data to the receiver, and only the receiver has the knowledge to transform
the data into its original form. Hence, even if a third person possesses the
encrypted data, he/she can’t understand it.&lt;/p&gt;
&lt;p&gt;Without HTTPS services like internet banking, chatting applications(like
WhatsApp), Instagram etc. can’t function!&lt;/p&gt;
&lt;p&gt;HTTPS is mandatory for online security. You must not trust websites that do not
operate on HTTPS. Anyone can read your data in non HTTPS websites.&lt;/p&gt;
&lt;p&gt;Browser can show visual signs about a &lt;em&gt;secured site&lt;/em&gt; running on HTTPS vs an
unsecured site running on plain HTTP. The following images are from Chrome
browser.&lt;/p&gt;
&lt;p&gt;&lt;img width=&quot;50%&quot; src=&quot;https://s3.ap-south-1.amazonaws.com/prd-hc-oj-public-1/public/users/73794b05-fe63-4188-81cd-b6fd35c7aa4e/images/fJIjCHnT1gqFZzmFakAL8vVe6T7aLmzR&quot; style=&quot;display: block; margin-left:auto; margin-right:auto&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img width=&quot;50%&quot; src=&quot;https://s3.ap-south-1.amazonaws.com/prd-hc-oj-public-1/public/users/73794b05-fe63-4188-81cd-b6fd35c7aa4e/images/tyVY1iSmOUxGSAIuk6VECLtdZV7y3ceR&quot; style=&quot;display: block; margin-left:auto; margin-right:auto&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;&quot;&gt;Image&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;</content:encoded></item><item><title><![CDATA[How to choose your First Programming Language]]></title><description><![CDATA[The articles helps to decide your first programming language.]]></description><link>https://lumen.netlify.com/posts/how-to-choose-your-first-programming-language</link><guid isPermaLink="false">https://lumen.netlify.com/posts/how-to-choose-your-first-programming-language</guid><pubDate>Sat, 02 Jan 2021 00:00:00 GMT</pubDate><content:encoded>&lt;blockquote&gt;
&lt;p&gt;You first programming language can make or break your interest in the
wonderful world of programming and building cool stuff.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Let me summarise this long story for you -&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Programming language doesn’t make you a better developer; building a solid foundation of software engineering principles does. So, don’t go on searching for the best programming language.&lt;/li&gt;
&lt;li&gt;Choose a language that has good online support.&lt;/li&gt;
&lt;li&gt;Choose a language that is not scary and easy to write code in. &lt;/li&gt;
&lt;li&gt;My personal preference is &lt;code class=&quot;language-text&quot;&gt;python&lt;/code&gt;. Although, javascript is also a good option.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Since you have come so far, I know that you have the patience and the interest
to read the entire story. I tried my best to shorten the story, but the I needed
to convince you of a very important step - choosing your first programming
language.&lt;/p&gt;
&lt;p&gt;People who want to start writing code, or students who want to build their
career as software developers often think which programming language they should
start with. &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Some want to choose the best programming language. &lt;/li&gt;
&lt;li&gt;Some want a language that is famous in the industry and can help them get good jobs.&lt;/li&gt;
&lt;li&gt;Some want to learn the newest language in the market. It must be better than the old ones.&lt;/li&gt;
&lt;li&gt;Some go after building apps, and think they will learn the language on the way.&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;Programming language is a tool. It doesn’t make you a better developer, and
will not give you better credibility.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;So….. which language should you start with ???&lt;/p&gt;
&lt;p&gt;That depends on what you want to achieve after learning the language.&lt;/p&gt;
&lt;p&gt;Yes. It’s as simple as that.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;If you want to build an Android app learn Kotlin or Java.&lt;/li&gt;
&lt;li&gt;If you want to build an iOS app learn Swift.&lt;/li&gt;
&lt;li&gt;If you want to build beautiful web pages learn HTML, CSS and Javascript.&lt;/li&gt;
&lt;li&gt;If you are a student and want good grades in your language course, learn whatever the professor is teaching you.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;BUT … if you want to build a good career as a software engineer …&lt;/p&gt;
&lt;p&gt;DO NOT go after searching for the best programming languages, learn how to build
logical solutions to a problem.&lt;/p&gt;
&lt;p&gt;What do I mean by that?&lt;/p&gt;
&lt;p&gt;Programming languages are just tools that help humans ask computers to do stuff
for them. Each programming language just makes it easier to do a certain kind of
job or in some cases it is the only tool we can choose.&lt;/p&gt;
&lt;p&gt;For example, the browser(Chrome, Firefox etc.) understands only HTML, CSS and
Javascript. You can’t write a program in C++ or Java that has to be executed on
the browser. An Android application needs to be written in Kotlin or Java only.&lt;/p&gt;
&lt;p&gt;Software developers are paid to build solutions to problems. To build efficient
and stable solutions, one would eventually have to work on multiple languages.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The real deal lies in using the best tool to solve the problem at hand.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Tools(language or frameworks) that you will use to build a chat application(like WhatsApp) will be completely different from the tools to be used to build a photo sharing site like Instagram.&lt;/p&gt;
&lt;p&gt;Every programming language(or framework) has its strengths and weaknesses. They must be chosen based on the end result needed.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;The real question is - What knowledge should I have to easily switch between
multiple languages or frameworks.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Every language has more or less similar constructs and tools to get things done. Some common constructs are -&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Variables&lt;/li&gt;
&lt;li&gt;Arithmetic operations - addition, subtraction, multiplication, division etc.&lt;/li&gt;
&lt;li&gt;Conditional statements - If a condition is true perform some action.&lt;/li&gt;
&lt;li&gt;Looping constructs - Repeat a task certain number of times.&lt;/li&gt;
&lt;li&gt;Object Oriented Programming - A certain pattern of writing code&lt;/li&gt;
&lt;li&gt;Functional Programming - Another pattern of writing code&lt;/li&gt;
&lt;li&gt;Error handling&lt;/li&gt;
&lt;li&gt;etc.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Understand these basics. Learn where and how to use them. If you are comfortable
using these patterns in one language, you can use them in other languages also.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Learn one language first. Learn it well. Be very comfortable in that language.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;You don’t want to be this guy  -&lt;/p&gt;
&lt;img width=&quot;400&quot; src=&quot;https://s3.ap-south-1.amazonaws.com/prd-hc-oj-public-1/public/users/73794b05-fe63-4188-81cd-b6fd35c7aa4e/images/IkJbqBowiMTx5K7gp1gUbkAOMseLi019&quot;&gt;
&lt;p&gt;&lt;em&gt;(Source: &lt;a href=&quot;http://geek-and-poke.com/geekandpoke/2009/7/25/the-art-of-programming-part-2.html&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener noreferrer&quot;&gt;http://geek-and-poke.com/geekandpoke/2009/7/25/the-art-of-programming-part-2.html&lt;/a&gt;)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Coming to the million dollar question of What Should My First Programming Language?&lt;/p&gt;
&lt;p&gt;Your first programming language show should be -&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Should be simple to write in, so that you can concentrate on the solution rather than the language syntax.&lt;/li&gt;
&lt;li&gt;Should be easier to find help on the internet. Common problems have been addressed in online forums like StackOverflow etc.&lt;/li&gt;
&lt;li&gt;Should have an ecosystem of stable libraries for common tasks like building web services, parsing files of common formats(json etc.).&lt;/li&gt;
&lt;li&gt;Better if it is popular in the software industry. Eg. a language called ‘Javascript’ is very famous, but a language like ‘Lisp’ is not so famous. Working on an industry famous language adds weight to your resume.&lt;/li&gt;
&lt;li&gt;Since, it is very common for developers to work on web services. Your first language should have a good support building web applications.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;I would recommend to choose amongst following two languages that satisfy the
above criteria -&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Python&lt;/strong&gt; &lt;img width=&quot;200&quot; src=&quot;https://s3.ap-south-1.amazonaws.com/prd-hc-oj-public-1/public/users/73794b05-fe63-4188-81cd-b6fd35c7aa4e/images/8r2wVkA4W3qIUR4FGDe3Tr5dZI97zbrw&quot;&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Javascript&lt;/strong&gt; &lt;img width=&quot;80&quot; src=&quot;https://s3.ap-south-1.amazonaws.com/prd-hc-oj-public-1/public/users/73794b05-fe63-4188-81cd-b6fd35c7aa4e/images/szKckFUtCsH2kWNTHSIQkJJQXVDPxTyA&quot;&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Why?&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Both are pretty easy to learn and write code in. &lt;/li&gt;
&lt;li&gt;Both have very good online support i.e. you can find answers to almost all the problems you will face while working in them.&lt;/li&gt;
&lt;li&gt;Both have a stable ecosystem of libraries. This is very important for any language.&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;Python and Javascript both do not scare beginner developers.&lt;/p&gt;
&lt;/blockquote&gt;</content:encoded></item><item><title><![CDATA[Git Cheatsheet]]></title><description><![CDATA[Tips to enhance your Git workflow.]]></description><link>https://lumen.netlify.com/posts/git-cheatsheet</link><guid isPermaLink="false">https://lumen.netlify.com/posts/git-cheatsheet</guid><pubDate>Fri, 01 Jan 2021 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;While writing software, Version Control is very important. Every software developer must learn to use version control. Git has become the default version control tool, and a software developer can’t skip learning this tool.  &lt;/p&gt;
&lt;p&gt;This article is intended for readers who have just started using git. Hopefully this helps them in making the git journey more fun.&lt;/p&gt;
&lt;p&gt;Mentioning common git commands and aliases below.&lt;/p&gt;
&lt;h2 id=&quot;common-git-commands&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#common-git-commands&quot; aria-label=&quot;common git commands permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Common Git Commands&lt;/h2&gt;
&lt;h3 id=&quot;clone-a-repository&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#clone-a-repository&quot; aria-label=&quot;clone a repository permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Clone a repository&lt;/h3&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;sh&quot;&gt;&lt;pre class=&quot;language-sh&quot;&gt;&lt;code class=&quot;language-sh&quot;&gt;git clone &amp;lt;repository_name&amp;gt; &amp;lt;destination_folder&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;if &lt;code class=&quot;language-text&quot;&gt;&amp;lt;destination_folder&amp;gt;&lt;/code&gt; is not given git creates a new folder with the name of the repo.&lt;/p&gt;
&lt;p&gt;The following clones the &lt;a href=&quot;https://github.com/facebook/react&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener noreferrer&quot;&gt;official React repo&lt;/a&gt;, into the a new folder react into your local machine.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://s3.ap-south-1.amazonaws.com/prd-hc-oj-public-1/public/users/73794b05-fe63-4188-81cd-b6fd35c7aa4e/images/5Sex4ntFGqjYT1NPTPyXuzQaZDJbdtqv&quot; alt=&quot;git-clone&quot;&gt;&lt;/p&gt;
&lt;p&gt;And the following clone the React repo, in the folder called &lt;code class=&quot;language-text&quot;&gt;my-react&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://s3.ap-south-1.amazonaws.com/prd-hc-oj-public-1/public/users/73794b05-fe63-4188-81cd-b6fd35c7aa4e/images/fcom9lpIihWQGhqpQKnWj1M7xl2myG7s&quot; alt=&quot;git-clone&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;to-start-a-new-git-tracked-repo&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#to-start-a-new-git-tracked-repo&quot; aria-label=&quot;to start a new git tracked repo permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;To start a new git tracked repo&lt;/h3&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;sh&quot;&gt;&lt;pre class=&quot;language-sh&quot;&gt;&lt;code class=&quot;language-sh&quot;&gt;mkdir new-project
﻿
git init     # Makes the current directory a git tracked repo

# Add files to the new-project
# Its a good idea to add a &amp;#39;README.md&amp;#39; file and a &amp;#39;.gitignore&amp;#39; file and then make your first commit.
﻿
# Adds all the files in the current directory
git add .
﻿
# Make your first commit and give a meaningful message
git commit -m &amp;quot;Add README and gitignore&amp;quot;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&quot;configure-your-git-installation&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#configure-your-git-installation&quot; aria-label=&quot;configure your git installation permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Configure your git installation&lt;/h3&gt;
&lt;p&gt;Add your username and email to git config so that git can add them in each that you make.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;sh&quot;&gt;&lt;pre class=&quot;language-sh&quot;&gt;&lt;code class=&quot;language-sh&quot;&gt;git config --global user.name &amp;quot;your_username&amp;quot;
git config --global user.email your_email@example.com&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Git shows the user details in logs etc.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://s3.ap-south-1.amazonaws.com/prd-hc-oj-public-1/public/users/73794b05-fe63-4188-81cd-b6fd35c7aa4e/images/e93yMczUbrfxO8FpDy3lrCB10fU9n7Q8&quot; alt=&quot;git log&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;making-changes-in-your-local-and-push-it-to-remote-repo&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#making-changes-in-your-local-and-push-it-to-remote-repo&quot; aria-label=&quot;making changes in your local and push it to remote repo permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Making changes in your local and push it to remote repo&lt;/h3&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;sh&quot;&gt;&lt;pre class=&quot;language-sh&quot;&gt;&lt;code class=&quot;language-sh&quot;&gt;# Make changes in the files

# Check which files has changes
git status&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;https://s3.ap-south-1.amazonaws.com/prd-hc-oj-public-1/public/users/73794b05-fe63-4188-81cd-b6fd35c7aa4e/images/j4KZpA218BYXb88M4tJohFa1UNgZk4SN&quot; alt=&quot;git status&quot;&gt;&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;sh&quot;&gt;&lt;pre class=&quot;language-sh&quot;&gt;&lt;code class=&quot;language-sh&quot;&gt;# Add changes to the staging area
git add &amp;lt;file1&amp;gt; &amp;lt;file2&amp;gt;

# Or to add all changes
git add .

# Files in the staging area are shown in green colour&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;https://s3.ap-south-1.amazonaws.com/prd-hc-oj-public-1/public/users/73794b05-fe63-4188-81cd-b6fd35c7aa4e/images/Z1AqY60Cyj9ENZgXhxfn1DwaCZy1ukVu&quot; alt=&quot;git status&quot;&gt;&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;sh&quot;&gt;&lt;pre class=&quot;language-sh&quot;&gt;&lt;code class=&quot;language-sh&quot;&gt; # Commit the changes in the staging area
git commit -m &amp;quot;A meaningful commit message&amp;quot;

# push the changes in the remote repo
git push origin &amp;lt;current_branch_name&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&quot;switch-between-branches&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#switch-between-branches&quot; aria-label=&quot;switch between branches permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Switch between branches&lt;/h3&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;sh&quot;&gt;&lt;pre class=&quot;language-sh&quot;&gt;&lt;code class=&quot;language-sh&quot;&gt;git checkout &amp;lt;branch&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&quot;merge-your-branch-in-master&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#merge-your-branch-in-master&quot; aria-label=&quot;merge your branch in master permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Merge your branch in master&lt;/h3&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;sh&quot;&gt;&lt;pre class=&quot;language-sh&quot;&gt;&lt;code class=&quot;language-sh&quot;&gt;# Switch to master branch
git checkout master
﻿
git merge &amp;lt;your_branch&amp;gt;

# Might have conflicts. Resolve conflicts and then continue merging.

# Check logs to see if the changes have been incorporated
git log

# If everything looks fine, push to remote master
git push origin master&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&quot;determine-what-changes-you-have-made&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#determine-what-changes-you-have-made&quot; aria-label=&quot;determine what changes you have made permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Determine what changes you have made&lt;/h3&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;sh&quot;&gt;&lt;pre class=&quot;language-sh&quot;&gt;&lt;code class=&quot;language-sh&quot;&gt;git diff &amp;lt;filename&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;https://s3.ap-south-1.amazonaws.com/prd-hc-oj-public-1/public/users/73794b05-fe63-4188-81cd-b6fd35c7aa4e/images/9UU5KQKtF8BQrQ7hP31BVFBU6FzJMcpY&quot; alt=&quot;git diff&quot;&gt;&lt;/p&gt;
&lt;p&gt;Additions and deletions are shown by + and - signs, and can be color-coded depending on the shell you use.&lt;/p&gt;
&lt;h2 id=&quot;useful-aliases&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#useful-aliases&quot; aria-label=&quot;useful aliases permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Useful Aliases&lt;/h2&gt;
&lt;p&gt;Git is a very useful tool, something that developers use multiple times in a
day. Typing git commands can be eased by using aliases to most common commands
like &lt;code class=&quot;language-text&quot;&gt;git status&lt;/code&gt; or &lt;code class=&quot;language-text&quot;&gt;git push&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Mentioning few useful aliases below. Include them in your &lt;code class=&quot;language-text&quot;&gt;~/.bashrc&lt;/code&gt; file. Your
configuration file may vary depending on your operating system and shell. If you
are using Ubuntu or Mac OS X, &lt;code class=&quot;language-text&quot;&gt;~/.bashrc&lt;/code&gt; is the file you need. If the file
doesn’t exist, create the file.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;sh&quot;&gt;&lt;pre class=&quot;language-sh&quot;&gt;&lt;code class=&quot;language-sh&quot;&gt;g=git

# Use: ga README.md .gitignore
ga=&amp;#39;git add&amp;#39;

# To add deleted files also
gaa=&amp;#39;git add --all&amp;#39;

# Use: gcmsg &amp;quot;Meaningful commit message&amp;quot;
gcmsg=&amp;#39;git commit -m&amp;#39;

# To switch to another branch
# Use: gco master
gco=&amp;#39;git checkout&amp;#39;

# Use: gd &amp;lt;filename&amp;gt;
gd=&amp;#39;git diff&amp;#39;

# Get the list of branches, and you current branch
gb=&amp;#39;git branch&amp;#39;

# Use: gc -m &amp;quot;A meaningful message&amp;quot;
gc=&amp;#39;git commit -v&amp;#39;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Function to get the current branch name.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;sh&quot;&gt;&lt;pre class=&quot;language-sh&quot;&gt;&lt;code class=&quot;language-sh&quot;&gt;function git_current_branch() {  
    local ref  
    ref=$(command git symbolic-ref --quiet HEAD 2&amp;gt; /dev/null)  
    local ret=$?  
    if [[ $ret != 0 ]]; then 
        [[ $ret == 128 ]] &amp;amp;&amp;amp; return  # no git repo.  
        ref=$(command git rev-parse --short HEAD 2&amp;gt; /dev/null) || return  
    fi
    echo ${ref#refs/heads/}
}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Aliases for &lt;code class=&quot;language-text&quot;&gt;git push&lt;/code&gt; and &lt;code class=&quot;language-text&quot;&gt;git pull&lt;/code&gt;. These save typing a lot of characters, and possible typos. Very useful!&lt;/p&gt;
&lt;p&gt;Pull your current branch to remote.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;sh&quot;&gt;&lt;pre class=&quot;language-sh&quot;&gt;&lt;code class=&quot;language-sh&quot;&gt;# Use:
# git checkout &amp;lt;your_branch&amp;gt;
# ggpull  # Get the latest changes from remote

ggpull=&amp;#39;git pull origin $(git_current_branch)&amp;#39;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Push your current branch to remote. A new branch in remote is created, if already not present.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;sh&quot;&gt;&lt;pre class=&quot;language-sh&quot;&gt;&lt;code class=&quot;language-sh&quot;&gt;# Use: After making commits to your current branch
# ggpush

ggpush=&amp;#39;git push origin $(git_current_branch)&amp;#39;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Hope this cheatsheet makes your git journey easier.&lt;/p&gt;
&lt;p&gt;Happy coding! 😊&lt;/p&gt;</content:encoded></item></channel></rss>